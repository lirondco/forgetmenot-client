{"version":3,"sources":["contexts/IdeasContext.js","contexts/ListContext.js","serviceWorker.js","components/Utils/Utils.js","config.js","services/token-service.js","components/NavBar/NavBar.js","components/Utils/PrivateRoute.js","components/Utils/PublicOnlyRoute.js","services/auth-api-service.js","components/Login/Login.js","routes/LoginPage/LoginPage.js","components/Join/Join.js","routes/JoinPage/JoinPage.js","routes/NotFoundPage/NotFoundPage.js","components/Home/Home.js","services/ideas-api-service.js","components/IdeaListItem/IdeaListItem.js","routes/ListsPage/ListsPage.js","routes/HomePage/HomePage.js","components/Accordion/Chevron.js","components/Accordion/Accordion.js","routes/IdeasPage/IdeasPage.js","components/NewIdeaForm/NewIdeaForm.js","routes/NewIdeaPage/NewIdeaPage.js","components/NewListForm/NewListForm.js","routes/NewListPage/NewListPage.js","components/ErrorComponent/ErrorComponent.js","components/AboutHelp/About.js","components/AboutHelp/MyForm.js","components/AboutHelp/Help.js","components/App/App.js","index.js"],"names":["nullList","user","IdeasContext","React","createContext","list","loggedIn","ideas","lists","error","setError","toggleLoggedIn","clearError","setList","clearList","setIdeas","addIdea","deleteIdea","clearLists","setLists","IdeaProvider","state","ideaId","setState","filter","idea","id","console","value","this","Provider","props","children","Component","ListContext","addList","deleteList","ListProvider","listId","Boolean","window","location","hostname","match","Hyph","className","Button","join","Textarea","Input","Required","Section","classes","TokenService","saveAuthToken","token","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","NavBar","handleLogoutClick","context","log","onClick","to","renderLogoutLink","renderLoginLink","PrivateRoute","component","render","componentProps","pathname","from","PublicOnlyRoute","updateUserLoggedIn","contextType","AuthApiService","postLogin","username","fetch","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postUser","LoginForm","handleSubmitJwtAuth","ev","preventDefault","target","authToken","onLoginSuccess","catch","onSubmit","role","htmlFor","required","name","type","defaultProps","LoginPage","handleLoginSuccess","history","destination","push","Join","handleSubmit","email","onRegistrationSuccess","JoinPage","handleRegistrationSuccess","NotFoundPage","Home","IdeasApiService","getLists","getList","getListIdeas","postList","postIdea","content","list_id","IdeaListItem","handleClickDelete","confirm","onDeleteSuccess","ListIdeaCount","text","number_of_ideas","ListsPage","handleDeleteSuccess","map","renderLists","HomePage","Chevron","height","width","xmlns","viewBox","fill","d","Accordion","useState","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","useRef","current","scrollHeight","title","ref","style","maxHeight","dangerouslySetInnerHTML","__html","IdeasPage","params","Ideas","deleteFunction","renderList","length","NewIdeaForm","listSelection","missingList","onPostIdeaSuccess","maxLength","aria-label","cols","rows","placeholder","renderListError","NewIdeaPage","handlePostIdeaSuccess","NewListForm","handleSubmitList","onPostListSuccess","NewListPage","handlePostListSuccess","ErrorComponent","hasError","errorInfo","About","MyForm","submitForm","bind","status","action","form","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","send","Help","App","exact","path","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6iBAEaA,EAAW,CACpBC,KAAM,IAGJC,EAAeC,IAAMC,cAAc,CACvCC,KAAML,EACNM,UAAU,EACVC,MAAO,GACPC,MAAO,GACPC,MAAO,KACPC,SAAU,aACVC,eAAgB,aAChBC,WAAY,aACZC,QAAS,aACTC,UAAW,aACXC,SAAU,aACVC,QAAS,aACTC,WAAY,aACZC,WAAY,aACZC,SAAU,eAGGjB,IAEFkB,EAAb,4MACEC,MAAQ,CACNhB,KAAML,EACNQ,MAAO,GACPD,MAAO,GACPE,MAAO,KACPH,UAAU,GANd,EASEW,WAAa,SAAAK,GACT,EAAKC,SAAS,CAAEhB,MAAO,EAAKc,MAAMd,MAAMiB,QAAO,SAAAC,GAC3C,OAAOA,EAAKC,KAAOJ,QAX7B,EAgBEX,eAAiB,WACf,EAAKY,SAAS,CAAEjB,UAAW,EAAKe,MAAMf,YAjB1C,EAoBEI,SAAW,SAAAD,GACTkB,QAAQlB,MAAMA,GACd,EAAKc,SAAS,CAAEd,WAtBpB,EAyBEG,WAAa,WACX,EAAKW,SAAS,CAAEd,MAAO,QA1B3B,EA6BEI,QAAU,SAAAR,GACR,EAAKkB,SAAS,CAAElB,UA9BpB,EAiCEc,SAAW,SAAAX,GACT,EAAKe,SAAS,CAAEf,WAlCpB,EAqCEO,SAAW,SAAAR,GACT,EAAKgB,SAAS,CAAEhB,WAtCpB,EAyCEO,UAAY,WACV,EAAKD,QAAQb,GACb,EAAKe,SAAS,KA3ClB,EA8CEG,WAAa,WACT,EAAKC,SAAS,KA/CpB,EAkDEH,QAAU,SAAAS,GACR,EAAKV,SAAL,sBACK,EAAKM,MAAMd,OADhB,CAEEkB,MArDN,uDA0DI,IAAMG,EAAQ,CACZvB,KAAMwB,KAAKR,MAAMhB,KACjBE,MAAOsB,KAAKR,MAAMd,MAClBC,MAAOqB,KAAKR,MAAMb,MAClBC,MAAOoB,KAAKR,MAAMZ,MAClBH,SAAUuB,KAAKR,MAAMf,SACrBK,eAAgBkB,KAAKlB,eACrBD,SAAUmB,KAAKnB,SACfE,WAAYiB,KAAKjB,WACjBO,SAAUU,KAAKV,SACfN,QAASgB,KAAKhB,QACdE,SAAUc,KAAKd,SACfD,UAAWe,KAAKf,UAChBE,QAASa,KAAKb,QACdC,WAAYY,KAAKZ,YAEnB,OACE,cAACf,EAAa4B,SAAd,CAAuBF,MAAOA,EAA9B,SACGC,KAAKE,MAAMC,eA5EpB,GAAkCC,aCxB5BC,EAAc/B,IAAMC,cAAc,CACtCI,MAAO,GACPC,MAAO,KACPC,SAAU,aACVE,WAAY,aACZO,SAAU,aACVgB,QAAS,aACTC,WAAY,aACZlB,WAAY,eAECgB,IAEFG,EAAb,4MACEhB,MAAQ,CACNb,MAAO,GACPC,MAAO,MAHX,EAME2B,WAAa,SAAAE,GACX,EAAKf,SAAS,CAAEf,MAAO,EAAKa,MAAMb,MAAMgB,QAAO,SAAAnB,GAC3C,OAAOA,EAAKqB,KAAOY,QAR3B,EAaEnB,SAAW,SAAAX,GACT,EAAKe,SAAS,CAAEf,WAdpB,EAiBEU,WAAa,WACX,EAAKC,SAAS,KAlBlB,EAqBET,SAAW,SAAAD,GACTkB,QAAQlB,MAAMA,GACd,EAAKc,SAAS,CAAEd,WAvBpB,EA0BEG,WAAa,WACX,EAAKW,SAAS,CAAEd,MAAO,QA3B3B,EA8BE0B,QAAU,SAAA9B,GACN,EAAKkB,SAAS,CAAElB,UA/BtB,uDAmCI,IAAMuB,EAAQ,CACZpB,MAAOqB,KAAKR,MAAMb,MAClBC,MAAOoB,KAAKR,MAAMZ,MAClBC,SAAUmB,KAAKnB,SACfE,WAAYiB,KAAKjB,WACjBO,SAAUU,KAAKV,SACfgB,QAASN,KAAKM,QACdC,WAAYP,KAAKO,WACjBlB,WAAYW,KAAKX,YAEnB,OACE,cAACgB,EAAYJ,SAAb,CAAsBF,MAAOA,EAA7B,SACGC,KAAKE,MAAMC,eA/CpB,GAAkCC,aCFdM,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gCCdD,SAASC,IACd,OAAO,sBAAMC,UAAU,OAAhB,SAAwB,QAG1B,SAASC,EAAT,GAA0C,IAAxBD,EAAuB,EAAvBA,UAAcd,EAAS,6BAC9C,OAAO,oCAAQc,UAAW,CAAC,SAAUA,GAAWE,KAAK,MAAUhB,IAG1D,SAASiB,EAAT,GAA4C,IAAxBH,EAAuB,EAAvBA,UAAcd,EAAS,6BAChD,OACE,sCAAUc,UAAW,CAAC,WAAYA,GAAWE,KAAK,MAAUhB,IAIzD,SAASkB,EAAT,GAAyC,IAAxBJ,EAAuB,EAAvBA,UAAcd,EAAS,6BAC7C,OACE,mCAAOc,UAAW,CAAC,QAASA,GAAWE,KAAK,MAAUhB,IAInD,SAASmB,EAAT,GAA4C,IAAxBL,EAAuB,EAAvBA,UAAcd,EAAS,6BAChD,OACE,8CAAMc,UAAW,CAAC,WAAYA,GAAWE,KAAK,MAAUhB,GAAxD,oBAMG,SAASoB,EAAT,GAAiD,IAA9BN,EAA6B,EAA7BA,UAAWxC,EAAkB,EAAlBA,KAAS0B,EAAS,oCAC/CqB,EAAU,CACd,UACA/C,GAAQ,gBACRwC,GACArB,OAAOe,SAASQ,KAAK,KACvB,OACE,qCAASF,UAAWO,GAAarB,ICtCtB,MACC,6CADD,EAEF,gCCDPsB,EAAe,CACnBC,cADmB,SACLC,GACZf,OAAOgB,aAAaC,QAAQC,EAAkBH,IAEhDI,aAJmB,WAKjB,OAAOnB,OAAOgB,aAAaI,QAAQF,IAErCG,eAPmB,WAQjBrB,OAAOgB,aAAaM,WAAWJ,IAEjCK,aAVmB,WAWjB,QAASV,EAAaM,gBAExBK,mBAbmB,SAaAC,EAAUC,GAC3B,OAAO1B,OAAO2B,KAAP,UAAeF,EAAf,YAA2BC,MAIvBb,ICbMe,G,kNAGnBC,kBAAoB,WAClBhB,EAAaQ,iBACb,EAAKS,QAAQ3D,iBACbgB,QAAQ4C,IAAI,EAAKD,QAAQhE,SAAU,sB,iEAKnC,OACE,sBAAKuC,UAAU,oBAAf,UACE,cAAC,IAAD,CACE2B,QAAS3C,KAAKwC,kBACdI,GAAG,IAFL,oBAKA,cAAC7B,EAAD,IACA,cAAC,IAAD,CAAM6B,GAAG,SAAT,mBAGA,cAAC7B,EAAD,IACA,cAAC,IAAD,CAAM6B,GAAG,QAAT,uB,wCASJ,OACE,sBAAK5B,UAAU,wBAAf,UACE,cAAC,IAAD,CAAM4B,GAAG,SAAT,mBAGA,cAAC7B,EAAD,IACA,cAAC,IAAD,CAAM6B,GAAG,QAAT,uB,+BAQJ,OACE,sBAAK5B,UAAU,SAAf,UACE,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAM4B,GAAG,IAAT,UACG,IADH,mBAKDpB,EAAaU,eACVlC,KAAK6C,mBACL7C,KAAK8C,yB,GAxDmB1C,cCHrB,SAAS2C,EAAT,GAAgD,IAAxBC,EAAuB,EAAvBA,UAAc9C,EAAS,6BACtDE,EAAY4C,EAClB,OACE,cAAC,IAAD,2BACM9C,GADN,IAEE+C,OAAQ,SAAAC,GAAc,OACpB1B,EAAaU,eACT,cAAC9B,EAAD,eAAe8C,IACf,cAAC,IAAD,CACEN,GAAI,CACFO,SAAU,SACV3D,MAAO,CAAE4D,KAAMF,EAAetC,iBCX/B,SAASyC,EAAT,GAAmD,IAAxBL,EAAuB,EAAvBA,UAAc9C,EAAS,6BACzDE,EAAY4C,EAClB,OACE,cAAC,IAAD,2BACM9C,GADN,IAEE+C,OAAQ,SAAAC,GAAc,OACpB1B,EAAaU,eACT,cAAC,IAAD,CAAUU,GAAI,MACd,cAACxC,EAAD,2BAAe8C,GAAf,IAA+BI,mBAAoBpD,EAAMoD,0BFLhDf,EACZgB,YAAclF,EGNvB,IA+BemF,EA/BQ,CACrBC,UADqB,YACc,IAAvBC,EAAsB,EAAtBA,SAAUrB,EAAY,EAAZA,SACpB,OAAOsB,MAAM,GAAD,OAAI9B,EAAJ,eAAsC,CAChD+B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEN,WAAUrB,eAEhC4B,MAAK,SAAAC,GAAG,OACLA,EAAIC,GAEFD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,UAI9CG,SAfqB,SAeZpG,GACP,OAAOuF,MAAM,GAAD,OAAI9B,EAAJ,UAAiC,CAC3C+B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU5F,KAEpB6F,MAAK,SAAAC,GAAG,OACLA,EAAIC,GAEFD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,WCtB3BI,E,4MASnBjF,MAAQ,CAAEZ,MAAO,M,EAKjB8F,oBAAsB,SAAAC,GACpBA,EAAGC,iBACH,EAAKlF,SAAS,CAAEd,MAAO,OAFG,MAGK+F,EAAGE,OAA1BnB,EAHkB,EAGlBA,SAAUrB,EAHQ,EAGRA,SAElBmB,EAAeC,UAAU,CACvBC,SAAUA,EAAS3D,MACnBsC,SAAUA,EAAStC,QAElBkE,MAAK,SAAAC,GACJR,EAAS3D,MAAQ,GACjBsC,EAAStC,MAAQ,GACjByB,EAAaC,cAAcyC,EAAIY,WAC/B,EAAK5E,MAAM6E,iBACX,EAAKtC,QAAQ3D,oBAEdkG,OAAM,SAAAd,GACL,EAAKxE,SAAS,CAAEd,MAAOsF,EAAItF,Y,uDAIvB,IACAA,EAAUoB,KAAKR,MAAfZ,MACR,OACE,uBACEoC,UAAU,YACViE,SAAUjF,KAAK0E,oBAFjB,UAIE,qBAAKQ,KAAK,QAAV,SACGtG,GAAS,mBAAGoC,UAAU,MAAb,SAAoBpC,MAEhC,sBAAKoC,UAAU,WAAf,UACE,uBAAOmE,QAAQ,sBAAf,sBAGA,cAAC/D,EAAD,CACEgE,UAAQ,EACRC,KAAK,WACLxF,GAAG,2BAGP,sBAAKmB,UAAU,WAAf,UACE,uBAAOmE,QAAQ,sBAAf,sBAGA,cAAC/D,EAAD,CACEgE,UAAQ,EACRC,KAAK,WACLC,KAAK,WACLzF,GAAG,2BAGP,cAACoB,EAAD,CAAQqE,KAAK,SAAb,0B,GAlE+BlF,aAAlBqE,EAGZc,aAAe,CACpBR,eAAgB,cAJCN,EAOZlB,YAAclF,E,UCPFmH,E,4MAQnBC,mBAAqB,WAAO,IAAD,EACK,EAAKvF,MAA3BU,EADiB,EACjBA,SAAU8E,EADO,EACPA,QACZC,GAAe/E,EAASpB,OAAS,IAAI4D,MAAQ,IACnDsC,EAAQE,KAAKD,I,uDAIb,OACE,eAACrE,EAAD,CAASN,UAAU,YAAnB,UACE,oBAAIA,UAAU,aAAd,mBACA,cAAC,EAAD,CACE+D,eAAgB/E,KAAKyF,4B,GAnBQrF,aAAlBoF,EACZD,aAAe,CACpB3E,SAAU,GACV8E,QAAS,CACPE,KAAM,e,ICHSC,E,4MAKnBrG,MAAQ,CAAEZ,MAAO,M,EAEjBkH,aAAe,SAAAnB,GAEbA,EAAGC,iBAFgB,MAGmBD,EAAGE,OAAjCnB,EAHW,EAGXA,SAAUqC,EAHC,EAGDA,MAAO1D,EAHN,EAGMA,SAEzB,EAAK3C,SAAS,CAAEd,MAAO,OACvB4E,EAAegB,SAAS,CACtBd,SAAUA,EAAS3D,MACnBgG,MAAOA,EAAMhG,MACbsC,SAAUA,EAAStC,QAElBkE,MAAK,SAAA7F,GACJsF,EAAS3D,MAAQ,GACjBgG,EAAMhG,MAAQ,GACdsC,EAAStC,MAAQ,GACjB,EAAKG,MAAM8F,2BAEZhB,OAAM,SAAAd,GACL,EAAKxE,SAAS,CAAEd,MAAOsF,EAAItF,Y,uDAIvB,IACAA,EAAUoB,KAAKR,MAAfZ,MACR,OACE,uBACEoC,UAAU,mBACViE,SAAUjF,KAAK8F,aAFjB,UAIE,qBAAKZ,KAAK,QAAV,SACGtG,GAAS,mBAAGoC,UAAU,MAAb,SAAoBpC,MAEhC,sBAAKoC,UAAU,WAAf,UACE,wBAAOmE,QAAQ,6BAAf,sBACW,cAAC9D,EAAD,OAEX,cAACD,EAAD,CACEiE,KAAK,WACLC,KAAK,OACLF,UAAQ,EACRvF,GAAG,kCAGP,sBAAKmB,UAAU,QAAf,UACE,wBAAOmE,QAAQ,0BAAf,2BACgB,cAAC9D,EAAD,OAEhB,cAACD,EAAD,CACEiE,KAAK,QACLC,KAAK,QACLF,UAAQ,EACRvF,GAAG,+BAGP,sBAAKmB,UAAU,WAAf,UACE,wBAAOmE,QAAQ,6BAAf,sBACW,cAAC9D,EAAD,OAEX,cAACD,EAAD,CACEiE,KAAK,WACLC,KAAK,WACLF,UAAQ,EACRvF,GAAG,kCAGP,cAACoB,EAAD,CAAQqE,KAAK,SAAb,6B,GAxE0BlF,aAAbyF,EACZN,aAAe,CACpBS,sBAAuB,c,UCHNC,E,4MAOnBC,0BAA4B,SAAA9H,GACN,EAAK8B,MAAjBwF,QACAE,KAAK,W,uDAIb,OACE,eAACtE,EAAD,CAASN,UAAU,mBAAnB,UACE,oBAAIA,UAAU,kBAAd,sBACA,cAAC,EAAD,CACEgF,sBAAuBhG,KAAKkG,mC,GAjBA9F,aAAjB6F,EACZV,aAAe,CACpBG,QAAS,CACPE,KAAM,e,UCJSO,E,uKAEjB,OACE,eAAC7E,EAAD,CAASN,UAAU,eAAnB,UACE,oBAAIA,UAAU,cAAd,yCACA,mBAAGA,UAAU,aAAb,mG,GALkCZ,aCArBgG,G,6KAEb,OACI,sBAAKpF,UAAW,iBAAhB,UACI,cAAC,IAAD,CAAM4B,GAAG,SAAT,SACI,qBAAK5B,UAAU,SAAf,sBAIJ,cAAC,IAAD,CAAM4B,GAAG,QAAT,SACI,qBAAK5B,UAAU,SAAf,8B,GAVc1C,IAAM8B,YCoGzBiG,EArGS,CACtBC,SADsB,WAEpB,OAAO3C,MAAM,GAAD,OAAI9B,EAAJ,UAAiC,CAC3CgC,QAAS,CACP,cAAgB,UAAhB,OAA2BrC,EAAaM,mBAGzCmC,MAAK,SAAAC,GAAG,OACLA,EAAIC,GAEFD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,UAI9CkC,QAbsB,SAad9F,GACN,OAAOkD,MAAM,GAAD,OAAI9B,EAAJ,kBAAiCpB,GAAU,CACrDoD,QAAS,CACP,cAAgB,UAAhB,OAA2BrC,EAAaM,mBAGzCmC,MAAK,SAAAC,GAAG,OACLA,EAAIC,GAEFD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,UAI9CmC,aAzBsB,SAyBT/F,GACX,OAAOkD,MAAM,GAAD,OAAI9B,EAAJ,kBAAiCpB,EAAjC,UAAiD,CAC3DoD,QAAS,CACP,cAAgB,UAAhB,OAA2BrC,EAAaM,mBAGzCmC,MAAK,SAAAC,GAAG,OACLA,EAAIC,GAEFD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,UAI9CoC,SArCsB,SAqCbpB,GACL,OAAO1B,MAAM,GAAD,OAAI9B,EAAJ,UAAiC,CAC3C+B,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BrC,EAAaM,iBAE5CgC,KAAMC,KAAKC,UAAU,CACjBqB,WAGHpB,MAAK,SAAAC,GAAG,OACHA,EAAIC,GAEAD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,UAIpDqC,SAtDsB,SAsDbjG,EAAQ4E,EAAMsB,GACrB,OAAOhD,MAAM,GAAD,OAAI9B,EAAJ,UAAiC,CAC3C+B,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BrC,EAAaM,iBAE1CgC,KAAMC,KAAKC,UAAU,CACnB4C,QAASnG,EACT4E,OACAsB,cAGD1C,MAAK,SAAAC,GAAG,OACLA,EAAIC,GAEFD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,UAK9CjF,WA1EsB,SA0EXK,GACP,OAAOkE,MAAM,GAAD,OAAI9B,EAAJ,kBAAiCpC,GAAU,CACnDmE,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BrC,EAAaM,mBAG7CmC,MAAK,SAAAC,GAAG,OACHA,EAAIC,GAEHrE,QAAQ4C,IAAI,2BAA4BjD,GADxCyE,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,UAKjD9D,WAzFsB,SAyFXE,GACP,OAAOkD,MAAM,GAAD,OAAI9B,EAAJ,kBAAiCpB,GAAU,CACnDmD,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BrC,EAAaM,mBAG7CkD,OAAM,SAAApG,GAAK,OAAKkB,QAAQ4C,IAAI9D,QC7FhBiI,G,kNAMnBC,kBAAoB,SAAAzC,GAClBA,EAAEO,iBACF,IAAMnE,EAAS,EAAKP,MAAML,GACvBc,OAAOoG,QAAQ,+GAClBV,EAAgB9F,WAAWE,GACzBwD,MAAK,kBAAM,EAAK/D,MAAM8G,qBACtBhC,OAAM,SAAApG,GAAK,OAAEkB,QAAQlB,MAAM,CAACA,c,uDAGtB,IACAJ,EAASwB,KAAKE,MAAd1B,KACR,OACA,sBAAKwC,UAAU,qBAAf,UACE,eAAC,IAAD,CAAM4B,GAAE,iBAAYpE,EAAKqB,IAAMmB,UAAU,eAAzC,UACE,wBAAQA,UAAU,uBAAlB,SACE,oBAAIA,UAAU,wBAAd,SACGxC,EAAK6G,SAGV,wBAAQrE,UAAU,uBAAlB,SACE,cAACiG,EAAD,CAAezI,KAAMA,SAGzB,wBAAQ8G,KAAK,SAAStE,UAAU,qBAAqB2B,QAAS3C,KAAK8G,kBAAnE,2B,GA7BoC1G,cAuC1C,SAAS6G,EAAT,GAAkC,IAATzI,EAAQ,EAARA,KACnB0I,EAAO,QAKX,OAHG1I,EAAK2I,gBAAkB,IACxBD,EAAO,QAGP,uBACElG,UAAU,2BADZ,UAGKxC,EAAK2I,gBAHV,IAG4BD,KAjDXL,EACZtB,aAAe,CACpByB,gBAAiB,c,UCDAI,E,4MAmBnBC,oBAAsB,SAAA7I,GACA,EAAK0B,MAAjBwF,QACAE,KAAR,KACA,EAAKnD,QAAQlC,WAAW/B,I,kEAbxB6H,EAAgBC,WACbrC,KAAKjE,KAAKyC,QAAQnD,UAClB2E,KAAKjE,KAAKyC,QAAQ1D,YAClBiG,MAAMhF,KAAKyC,QAAQ5D,Y,6CAItBmB,KAAKyC,QAAQpD,e,oCASA,IAAD,SACWW,KAAKyC,QAApB9D,MACR,YAFY,MACI,GADJ,GAEC2I,KAAI,SAAA9I,GAAI,OACnB,cAAC,EAAD,CACEqB,GAAIrB,EAAKqB,GAETrB,KAAMA,EACNwI,gBAAiB,kBAAI,EAAKK,oBAAoB7I,EAAKqB,MAF9CrB,EAAKqB,S,+BAON,IACAjB,EAAUoB,KAAKyC,QAAf7D,MACR,OACE,eAAC0C,EAAD,CAAS9C,MAAI,EAACwC,UAAU,YAAxB,UACE,sBAAKA,UAAU,eAAf,UACC,cAAC,IAAD,CAAM4B,GAAG,WAAT,SACG,qBAAK5B,UAAU,UAAf,wBAIH,cAAC,IAAD,CAAM4B,GAAG,WAAT,SACG,qBAAK5B,UAAU,UAAf,2BAKHpC,EACG,mBAAGoC,UAAU,MAAb,2CACAhB,KAAKuH,qB,GAvDsBnH,aAAlBgH,EACZ7B,aAAe,CACpBG,QAAS,CACPE,KAAM,eAHSwB,EAMZ7D,YAAclD,E,ICRFmH,E,uKAEjB,OACA,cAAClG,EAAD,CAASN,UAAY,WAArB,SACKQ,EAAaU,eACV,cAAC,EAAD,IACA,cAAC,EAAD,U,GAN0B9B,a,QCavBqH,MAjBf,SAAiBvH,GACf,OACE,qBACEc,UAAWd,EAAMc,UACjB0G,OAAQxH,EAAMwH,OACdC,MAAOzH,EAAMyH,MACbC,MAAM,6BACNC,QAAQ,cALV,SAOE,sBACEC,KAAM5H,EAAM4H,KACZC,EAAE,iS,MC6CKC,MAhDf,SAAmB9H,GAAQ,IAAD,EACY+H,mBAAS,IADrB,mBACjBC,EADiB,KACNC,EADM,OAEYF,mBAAS,OAFrB,mBAEjBG,EAFiB,KAENC,EAFM,OAGYJ,mBAAS,mBAHrB,mBAGjBK,EAHiB,KAGNC,EAHM,KAKlB5B,EAAU6B,iBAAO,MAoBvB,OACE,sBAAKxH,UAAU,qBAAf,UACE,sBAAKA,UAAS,oBAAekH,GAAavF,QApB9C,WACEwF,EAA6B,KAAdD,EAAmB,SAAW,IAC7CG,EACgB,WAAdH,EAAyB,MAAzB,UAAoCvB,EAAQ8B,QAAQC,aAApD,OAEFH,EACgB,WAAdL,EAAyB,kBAAoB,2BAc7C,UACE,mBAAGlH,UAAU,mBAAb,SAAiCd,EAAMyI,QACvC,cAAC,EAAD,CAAS3H,UAAS,UAAKsH,GAAaX,MAAO,GAAIG,KAAM,eAEvD,sBACEc,IAAKjC,EACLkC,MAAO,CAAEC,UAAU,GAAD,OAAKV,IACvBpH,UAAU,qBAHZ,UAKE,qBACEA,UAAU,kBACV+H,wBAAyB,CAAEC,OAAQ9I,EAAMyG,WAE3C,wBAAQrB,KAAK,SAAStE,UAAU,cAAc2B,QAvB1B,SAAA0B,GACxBA,EAAEO,iBACF,IAAMnF,EAASS,EAAML,GACrBwG,EAAgBjH,WAAWK,GACzBwE,MAAK,kBAAM/D,EAAM8G,qBACjBhC,OAAM,SAAApG,GAAK,OAAEkB,QAAQlB,MAAM,CAACA,cAkB1B,iCC1CaqK,G,kNA4BnB5B,oBAAsB,SAAAzH,GACA,EAAKM,MAAjBwF,QACAE,KAAR,iBAAuB,EAAKnD,QAAQjE,KAAKqB,KACzC,EAAK4C,QAAQrD,WAAWQ,I,kEArBN,IAEVa,EAAWT,KAAKE,MAAMY,MAAMoI,OAA5BzI,OACR4F,EAAgBE,QAAQ9F,GACrBwD,KAAKjE,KAAKyC,QAAQzD,SAClBiF,KAAKjE,KAAKyC,QAAQ1D,YAClBiG,MAAMhF,KAAKyC,QAAQ5D,UACtBwH,EAAgBG,aAAa/F,GAC1BwD,KAAKjE,KAAKyC,QAAQvD,UAClB+E,KAAKjE,KAAKyC,QAAQ1D,YAClBiG,MAAMhF,KAAKyC,QAAQ5D,Y,6CAKtBmB,KAAKyC,QAAQxD,c,mCASD,IAAD,EACae,KAAKyC,QAArBjE,EADG,EACHA,KAAME,EADH,EACGA,MACd,OAAO,qCACL,oBAAIsC,UAAU,YAAd,SAA2BxC,EAAK6G,OAChC,cAAC8D,EAAD,CAAOzK,MAAOA,EAAO0K,eAAgBpJ,KAAKqH,2B,+BAIpC,IAEJV,EAFG,EACoB3G,KAAKyC,QAAxB7D,EADD,EACCA,MADD,IACQJ,YADR,MACa,GADb,EAaP,OAREmI,EAFE/H,EAES,uBAAAA,EAAMA,MACb,mBAAGoC,UAAU,MAAb,4BACA,mBAAGA,UAAU,MAAb,gCACMxC,EAAKqB,GAGLG,KAAKqJ,aAFL,qBAAKrI,UAAU,YAKzB,cAACM,EAAD,CAASN,UAAU,YAAnB,SACG2F,Q,GAzD8BvG,cA+DvC,SAAS+I,EAAT,GAAgD,IAAD,IAA9BzK,aAA8B,MAAtB,GAAsB,EAAlB0K,EAAkB,EAAlBA,eAEzB,OAAqB,IAAjB1K,EAAM4K,OAEF,sBAAKtI,UAAU,aAAf,UACA,oDACA,cAAC,IAAD,CAAM4B,GAAG,IAAT,qCAKNlE,EAAM4I,KAAI,SAAA1H,GAAI,OACV,cAAC,EAAD,CACCoH,gBAAiB,kBAAMoC,EAAexJ,EAAKC,KAE3CA,GAAID,EAAKC,GACT8I,MAAO/I,EAAKyF,KACZsB,QAAS/G,EAAK+G,SAHT/G,EAAKC,OA7EAoJ,EACZ1D,aAAe,CACpBzE,MAAO,CAAEoI,OAAQ,IACjBxD,QAAS,CACLE,KAAM,eAJOqD,EAQZ1F,YAAclF,E,gBCTFkL,G,4MAKnBC,cAAgB,G,EAChBC,aAAc,E,EASd3D,aAAe,SAAAnB,GACbA,EAAGC,iBADgB,IAEXpG,EAASmG,EAAGE,OAAZrG,KACA6G,EAASV,EAAGE,OAAZQ,KACAsB,EAAYhC,EAAGE,OAAf8B,QAERN,EAAgBK,SAASlI,EAAKuB,MAAOsF,EAAKtF,MAAO4G,EAAQ5G,OACtDkE,MAAK,WACJzF,EAAKuB,MAAQ,GACbsF,EAAKtF,MAAQ,GACb4G,EAAQ5G,MAAQ,GAChB,EAAKG,MAAMwJ,uBAEZ1E,MAAM,EAAKvC,QAAQ5D,UACnBmG,MAAM,EAAKyE,aAAc,I,kEApB5BpD,EAAgBC,WACbrC,KAAKjE,KAAKyC,QAAQnD,UAClB2E,KAAKjE,KAAKyC,QAAQ1D,YAClBiG,MAAMhF,KAAKyC,QAAQ5D,Y,wCAsBtB,GADAiB,QAAQ4C,IAAI1C,KAAKyJ,cACO,IAArBzJ,KAAKyJ,YACN,OACE,oBAAGzI,UAAU,MAAb,6DAAmE,cAAC,IAAD,CAAM4B,GAAG,WAAT,wBAAnE,qB,+BAKI,IAAD,EACc5C,KAAKyC,QAAlB9D,aADD,MACO,GADP,EAEP,OACA,sBAAKqC,UAAU,aAAf,UACA,4DACE,uBACEA,UAAU,WACViE,SAAUjF,KAAK8F,aAFjB,UAIE,sBAAK9E,UAAU,WAAf,UACI,uBAAOmE,QAAQ,OAAf,8BACA,cAAC9D,EAAD,IACA,cAACD,EAAD,CACIgE,UAAQ,EACRE,KAAK,OACLqE,UAAU,KACVtE,KAAK,OACLxF,GAAG,YAGX,sBAAKmB,UAAU,UAAf,UACE,cAACK,EAAD,IACA,cAACF,EAAD,CACEiE,UAAQ,EACRwE,aAAW,8BACXvE,KAAK,UACLxF,GAAG,UACHgK,KAAK,KACLC,KAAK,IACLH,UAAU,MACVI,YAAY,mCAGhB,uBAAO5E,QAAQ,OAAf,gCACA,cAAC9D,EAAD,IACA,yBAAQxB,GAAG,OAAOwF,KAAK,OAAOD,UAAQ,EAAtC,UACI,wBAAQrF,MAAO,KAAf,iBACCpB,EAAM2I,KAAI,SAAA9I,GACP,OACA,wBAAsBuB,MAAOvB,EAAKqB,GAAlC,SACKrB,EAAK6G,MADG7G,EAAKqB,UAM1B,cAACoB,EAAD,CAAQqE,KAAK,SAAb,sBAGCtF,KAAKgK,4B,GAzF2B5J,aAApBmJ,GACZhE,aAAe,CAClBmE,kBAAmB,cAFJH,GAIZhG,YAAclF,E,ICPF4L,G,4MAOjBC,sBAAwB,SAAAtK,GACA,EAAKM,MAAjBwF,QACAE,KAAK,M,uDAIb,OACI,cAACtE,EAAD,CAASN,UAAY,cAArB,SACI,cAAC,GAAD,CACC0I,kBAAmB1J,KAAKkK,8B,GAhBA9J,aAApB6J,GACV1E,aAAe,CAClBG,QAAS,CACLE,KAAM,e,UCDGuE,G,4MAMnBC,iBAAmB,SAAAzF,GACjBA,EAAGC,iBADoB,IAEfS,EAASV,EAAGE,OAAZQ,KAERgB,EAAgBI,SAASpB,EAAKtF,OAC3BkE,KAAK,EAAKxB,QAAQnC,SAClB2D,MAAK,WACJoB,EAAKtF,MAAQ,GACb,EAAKG,MAAMmK,uBAEZrF,MAAM,EAAKvC,QAAQ5D,W,uDAItB,OACA,sBAAKmC,UAAU,aAAf,UACA,2EACE,uBACEA,UAAU,WACViE,SAAUjF,KAAKoK,iBAFjB,UAIE,sBAAKpJ,UAAU,WAAf,UACI,uBAAOmE,QAAQ,OAAf,8BACA,cAAC9D,EAAD,IACA,cAACD,EAAD,CACIgE,UAAQ,EACRE,KAAK,OACLqE,UAAU,KACVtE,KAAK,OACLxF,GAAG,YAGX,cAACoB,EAAD,CAAQqE,KAAK,SAAb,gC,GAtCiClF,aAApB+J,GACZ5E,aAAe,CACpB8E,kBAAmB,cAFFF,GAIZ5G,YAAclD,E,ICNFiK,G,4MAOjBC,sBAAwB,SAAA/L,GACA,EAAK0B,MAAjBwF,QACAE,KAAK,M,uDAIb,OACI,cAACtE,EAAD,CAASN,UAAY,cAArB,SACI,cAAC,GAAD,CACCqJ,kBAAmBrK,KAAKuK,8B,GAhBAnK,aAApBkK,GACV/E,aAAe,CAClBG,QAAS,CACLE,KAAM,e,UCJG4E,G,4MACrBhL,MAAQ,CACJiL,UAAU,G,gEAGI7L,EAAO8L,GACrB5K,QAAQ4C,IAAI,kBAAmB9D,EAAO8L,GAEtC1K,KAAKN,SAAS,CAAC+K,UAAU,M,+BAKzB,OAAIzK,KAAKR,MAAMiL,SAEP,sBAAKzJ,UAAY,aAAjB,UACI,yEACA,uEAILhB,KAAKE,MAAMC,a,GArBsB7B,IAAM8B,W,MCAnC,SAASuK,KACpB,OACI,sBAAK3J,UAAU,aAAf,UACI,gDACA,ikBAMI,uBAAM,uBANV,gRAUI,uBAAM,uBAVV,wNAeA,qDACA,gmBAOA,8CAzBJ,gL,aCFa4J,G,kDACnB,WAAY1K,GAAQ,IAAD,8BACjB,cAAMA,IACD2K,WAAa,EAAKA,WAAWC,KAAhB,iBAClB,EAAKtL,MAAQ,CACXuL,OAAQ,IAJO,E,qDAQT,IACAA,EAAW/K,KAAKR,MAAhBuL,OACR,OACE,uBACE9F,SAAUjF,KAAK6K,WACfG,OAAO,kCACPpH,OAAO,OAHT,UAKE,2CACA,cAACvC,EAAD,IACA,cAACD,EAAD,CAAOkE,KAAK,QAAQD,KAAK,QAAQD,UAAQ,IACzC,6CACA,cAAC/D,EAAD,IACA,cAACF,EAAD,CACCiE,UAAQ,EACRC,KAAK,UACLxF,GAAG,UACHgK,KAAK,KACLC,KAAK,MAEM,YAAXiB,EAAuB,wCAAiB,cAAC9J,EAAD,CAAQqE,KAAK,SAAb,oBAC7B,UAAXyF,GAAsB,gE,iCAKlBpG,GAAK,IAAD,OACbA,EAAGC,iBACH,IAAMqG,EAAOtG,EAAGE,OACVqG,EAAO,IAAIC,SAASF,GACpBG,EAAM,IAAIC,eAChBD,EAAIE,KAAKL,EAAKrH,OAAQqH,EAAKD,QAC3BI,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAIL,QACNE,EAAKU,QACL,EAAKjM,SAAS,CAAEqL,OAAQ,aAExB,EAAKrL,SAAS,CAAEqL,OAAQ,YAG5BK,EAAIQ,KAAKV,O,GAnDuB5M,IAAM8B,WCC3B,SAASyL,KACpB,OACI,sBAAK7K,UAAU,YAAf,UACI,yDACA,iGACA,cAAC,GAAD,O,ICyEG8K,G,4MA/DbtM,MAAQ,CAAEiL,UAAU,G,uDAUlB,OACE,cAAC,GAAD,UACA,sBAAKzJ,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACI,cAAC,EAAD,MAEJ,uBAAMA,UAAU,YAAhB,UACGhB,KAAKR,MAAMiL,UAAY,mBAAGzJ,UAAU,MAAb,wCACxB,eAAC,IAAD,WACE,cAAC,IAAD,CACE+K,OAAK,EACLC,KAAM,IACNhJ,UAAWwE,IAEb,cAAC,IAAD,CACEwE,KAAM,SACNhJ,UAAW2H,KAEb,cAAC,IAAD,CACEqB,KAAM,QACNhJ,UAAW6I,KAEb,cAACxI,EAAD,CACE2I,KAAM,SACNhJ,UAAawC,IAEf,cAACnC,EAAD,CACE2I,KAAM,QACNhJ,UAAWiD,IAEb,cAAClD,EAAD,CACGiJ,KAAM,iBACNhJ,UAAWiG,IAEd,cAAClG,EAAD,CACIiJ,KAAM,WACNhJ,UAAWiH,KAEf,cAAClH,EAAD,CACIiJ,KAAM,WACNhJ,UAAWsH,KAEf,cAAC,IAAD,CACEtH,UAAWmD,kB,gDAnDSvH,GAE9B,OADAkB,QAAQlB,MAAMA,GACP,CAAE6L,UAAU,O,GANLrK,a,MCPlB6L,IAAShJ,OACP,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,UAINiJ,SAASC,eAAe,S9B+GlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrI,MAAK,SAAAsI,GACjCA,EAAaC,kB","file":"static/js/main.ef95319a.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport const nullList = {\n    user: {}\n}\n\nconst IdeasContext = React.createContext({\n  list: nullList,\n  loggedIn: false,\n  ideas: [],\n  lists: [],\n  error: null,\n  setError: () => {},\n  toggleLoggedIn: () => {},\n  clearError: () => {},\n  setList: () => {},\n  clearList: () => {},\n  setIdeas: () => {},\n  addIdea: () => {},\n  deleteIdea: () => {},\n  clearLists: ()  => {},\n  setLists: () => {}\n})\n\nexport default IdeasContext\n\nexport class IdeaProvider extends Component {\n  state = {\n    list: nullList,\n    lists: [],\n    ideas: [],\n    error: null,\n    loggedIn: false\n  };\n\n  deleteIdea = ideaId => {\n      this.setState({ ideas: this.state.ideas.filter(idea=>{\n          return idea.id !== ideaId\n      })\n    })\n  }\n\n  toggleLoggedIn = () => {\n    this.setState({ loggedIn: !this.state.loggedIn })\n  }\n\n  setError = error => {\n    console.error(error)\n    this.setState({ error })\n  }\n\n  clearError = () => {\n    this.setState({ error: null })\n  }\n\n  setList = list => {\n    this.setState({ list })\n  }\n\n  setLists = lists => {\n    this.setState({ lists })\n  }\n\n  setIdeas = ideas => {\n    this.setState({ ideas })\n  }\n\n  clearList = () => {\n    this.setList(nullList)\n    this.setIdeas([])\n  }\n\n  clearLists = () => {\n      this.setLists([])\n  }\n\n  addIdea = idea => {\n    this.setIdeas([\n      ...this.state.ideas,\n      idea\n    ])\n  }\n\n  render() {\n    const value = {\n      list: this.state.list,\n      ideas: this.state.ideas,\n      lists: this.state.lists,\n      error: this.state.error,\n      loggedIn: this.state.loggedIn,\n      toggleLoggedIn: this.toggleLoggedIn,\n      setError: this.setError,\n      clearError: this.clearError,\n      setLists: this.setLists,\n      setList: this.setList,\n      setIdeas: this.setIdeas,\n      clearList: this.clearList,\n      addIdea: this.addIdea,\n      deleteIdea: this.deleteIdea,\n    }\n    return (\n      <IdeasContext.Provider value={value}>\n        {this.props.children}\n      </IdeasContext.Provider>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nconst ListContext = React.createContext({\n  lists: [],\n  error: null,\n  setError: () => {},\n  clearError: () => {},\n  setLists: () => {},\n  addList: () => {},\n  deleteList: () => {},\n  clearLists: () => {}\n})\nexport default ListContext\n\nexport class ListProvider extends Component {\n  state = {\n    lists: [],\n    error: null,\n  };\n\n  deleteList = listId => {\n    this.setState({ lists: this.state.lists.filter(list=>{\n        return list.id !== listId\n    })\n  })\n}\n\n  setLists = lists => {\n    this.setState({ lists })\n  }\n\n  clearLists = () => {\n    this.setLists([ ])\n  }\n \n  setError = error => {\n    console.error(error)\n    this.setState({ error })\n  }\n\n  clearError = () => {\n    this.setState({ error: null })\n  }\n\n  addList = list => {\n      this.setState({ list })\n  }\n\n  render() {\n    const value = {\n      lists: this.state.lists,\n      error: this.state.error,\n      setError: this.setError,\n      clearError: this.clearError,\n      setLists: this.setLists,\n      addList: this.addList,\n      deleteList: this.deleteList,\n      clearLists: this.clearLists\n    }\n    return (\n      <ListContext.Provider value={value}>\n        {this.props.children}\n      </ListContext.Provider>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react'\nimport './Utils.css'\n\n\nexport function Hyph() {\n  return <span className='Hyph'>{' - '}</span>\n}\n\nexport function Button({ className, ...props }) {\n  return <button className={['Button', className].join(' ')} {...props} />\n}\n\nexport function Textarea({ className, ...props }) {\n  return (\n    <textarea className={['Textarea', className].join(' ')} {...props} />\n  )\n}\n\nexport function Input({ className, ...props }) {\n  return (\n    <input className={['Input', className].join(' ')} {...props} />\n  )\n}\n\nexport function Required({ className, ...props }) {\n  return (\n    <span className={['Required', className].join(' ')} {...props}>\n      &#42;\n    </span>\n  )\n}\n\nexport function Section({ className, list, ...props }) {\n  const classes = [\n    'Section',\n    list && 'Section--list',\n    className,\n  ].filter(Boolean).join(' ')\n  return (\n    <section className={classes} {...props} />\n  )\n}","/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  API_ENDPOINT: 'https://calm-bayou-27862.herokuapp.com/api',\n  TOKEN_KEY: 'forgetmenot-client-auth-token',\n}","import config from '../config'\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`)\n  },\n}\n\nexport default TokenService","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Hyph } from '../Utils/Utils'\nimport TokenService from '../../services/token-service'\nimport IdeasContext from '../../contexts/IdeasContext'\nimport './NavBar.css'\n\nexport default class NavBar extends Component {\n  static contextType = IdeasContext\n\n  handleLogoutClick = () => {\n    TokenService.clearAuthToken()\n    this.context.toggleLoggedIn()\n    console.log(this.context.loggedIn, \"context logged in\")\n  }\n\n  renderLogoutLink() {\n//should render log out \n    return (\n      <div className='Header__logged-in'>\n        <Link\n          onClick={this.handleLogoutClick}\n          to='/'>\n          Logout\n        </Link>\n        <Hyph />  \n        <Link to='/about'>\n          About\n        </Link>\n        <Hyph />\n        <Link to='/help'>\n           Help \n        </Link>\n      </div>\n    )\n  }\n\n  renderLoginLink() {\n//should render without logout\n    return (\n      <div className='Header__not-logged-in'>\n        <Link to='/about'>\n          About\n        </Link>\n        <Hyph />\n        <Link to='/help'>\n           Help \n        </Link>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <nav className='Header'>\n        <h1 className=\"app_name\">\n          <Link to='/'>\n            {' '}\n            ForgetMeNot\n          </Link>\n        </h1>\n        {TokenService.hasAuthToken()\n          ? this.renderLogoutLink()\n          : this.renderLoginLink()}\n      </nav>\n    )\n  }\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport TokenService from '../../services/token-service'\n\nexport default function PrivateRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        TokenService.hasAuthToken()\n          ? <Component {...componentProps} />\n          : <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: componentProps.location }\n              }}\n            />\n      )}\n    />\n  )\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport TokenService from '../../services/token-service'\n\nexport default function PublicOnlyRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        TokenService.hasAuthToken()\n          ? <Redirect to={'/'} />\n          : <Component {...componentProps} updateUserLoggedIn={props.updateUserLoggedIn}/>\n      )}\n    />\n  )\n}","import config from '../config'\n\nconst AuthApiService = {\n  postLogin({ username, password }) {\n    return fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/users`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n}\n\nexport default AuthApiService","import React, { Component } from 'react'\nimport TokenService from '../../services/token-service'\nimport AuthApiService from '../../services/auth-api-service'\nimport { Button, Input } from '../Utils/Utils.js'\nimport IdeasContext from '../../contexts/IdeasContext'\nexport default class LoginForm extends Component {\n\n  //this component renders the user log in page\n  static defaultProps = {\n    onLoginSuccess: () => {}\n  }\n\n  static contextType = IdeasContext\n\n  state = { error: null }\n\n  /* the following function verifies the user's credentials\n  and creates the token key when successful    */\n\n  handleSubmitJwtAuth = ev => {\n    ev.preventDefault()\n    this.setState({ error: null })\n    const { username, password } = ev.target\n\n    AuthApiService.postLogin({\n      username: username.value,\n      password: password.value,\n    })\n      .then(res => {\n        username.value = ''\n        password.value = ''\n        TokenService.saveAuthToken(res.authToken)\n        this.props.onLoginSuccess()\n        this.context.toggleLoggedIn()\n      })\n      .catch(res => {\n        this.setState({ error: res.error })\n      })\n  }\n\n  render() {\n    const { error } = this.state\n    return (\n      <form\n        className='LoginForm'\n        onSubmit={this.handleSubmitJwtAuth}\n      >\n        <div role='alert'>\n          {error && <p className='red'>{error}</p>}\n        </div>\n        <div className='username'>\n          <label htmlFor='LoginForm__username'>\n            Username\n          </label>\n          <Input\n            required\n            name='username'\n            id='LoginForm__username'>\n          </Input>\n        </div>\n        <div className='password'>\n          <label htmlFor='LoginForm__password'>\n            Password\n          </label>\n          <Input\n            required\n            name='password'\n            type='password'\n            id='LoginForm__password'>\n          </Input>\n        </div>\n        <Button type='submit'>\n          Login\n        </Button>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Login from '../../components/Login/Login'\nimport { Section } from '../../components/Utils/Utils'\nimport './LoginPage.css'\n\nexport default class LoginPage extends Component {\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => {},\n    }\n  }\n\n  handleLoginSuccess = () => {\n    const { location, history } = this.props\n    const destination = (location.state || {}).from || '/'\n    history.push(destination)\n  }\n\n  render() {\n    return (\n      <Section className='LoginPage'>\n        <h2 className=\"login_page\">Login</h2>\n        <Login\n          onLoginSuccess={this.handleLoginSuccess}\n        />\n      </Section>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Button, Input, Required } from '../Utils/Utils'\nimport AuthApiService from '../../services/auth-api-service'\n\n//renders the registration page\n\nexport default class Join extends Component {\n  static defaultProps = {\n    onRegistrationSuccess: () => {}\n  }\n\n  state = { error: null }\n\n  handleSubmit = ev => {\n    //function to handle new user registrations\n    ev.preventDefault()\n    const { username, email, password } = ev.target\n\n    this.setState({ error: null })\n    AuthApiService.postUser({\n      username: username.value,\n      email: email.value,\n      password: password.value,\n    })\n      .then(user => {\n        username.value = ''\n        email.value = ''\n        password.value = ''\n        this.props.onRegistrationSuccess()\n      })\n      .catch(res => {\n        this.setState({ error: res.error })\n      })\n  }\n\n  render() {\n    const { error } = this.state\n    return (\n      <form\n        className='RegistrationForm'\n        onSubmit={this.handleSubmit}\n      >\n        <div role='alert'>\n          {error && <p className='red'>{error}</p>}\n        </div>\n        <div className='username'>\n          <label htmlFor='RegistrationForm__username'>\n            Username <Required />\n          </label>\n          <Input\n            name='username'\n            type='text'\n            required\n            id='RegistrationForm__username'>\n          </Input>\n        </div>\n        <div className='email'>\n          <label htmlFor='RegistrationForm__email'>\n            Email Address <Required />\n          </label>\n          <Input\n            name='email'\n            type='email'\n            required\n            id='RegistrationForm__email'>\n          </Input>\n        </div>\n        <div className='password'>\n          <label htmlFor='RegistrationForm__password'>\n            Password <Required />\n          </label>\n          <Input\n            name='password'\n            type='password'\n            required\n            id='RegistrationForm__password'>\n          </Input>\n        </div>\n        <Button type='submit'>\n          Register\n        </Button>\n      </form>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Section } from '../../components/Utils/Utils'\nimport Join from '../../components/Join/Join'\nimport './JoinPage.css'\n\nexport default class JoinPage extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {},\n    },\n  }\n\n  handleRegistrationSuccess = user => {\n    const { history } = this.props\n    history.push('/login')\n  }\n\n  render() {\n    return (\n      <Section className='RegistrationPage'>\n        <h2 className=\"register_header\">Register</h2>\n        <Join\n          onRegistrationSuccess={this.handleRegistrationSuccess}\n        />\n      </Section>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Section } from '../../components/Utils/Utils'\nimport './NotFoundPage.css'\n\nexport default class NotFoundPage extends Component {\n  render() {\n    return (\n      <Section className='NotFoundPage'>\n        <h2 className='error_title'>Four-Oh-Four Error - Uh oh!</h2>\n        <p className='error_text'>I don't think this was supposed to happen. Please check your URL and try again</p>\n      </Section>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css'\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <div className ='home_component'>\n                <Link to=\"/login\">\n                    <div className=\"signin\">\n                        Log In\n                    </div>\n                </Link>\n                <Link to=\"/join\">\n                    <div className=\"signup\">\n                        Sign Up\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n}","import TokenService from '../services/token-service'\nimport config from '../config'\n\nconst IdeasApiService = {\n  getLists() {\n    return fetch(`${config.API_ENDPOINT}/lists`, {\n      headers: {\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  getList(listId) {\n    return fetch(`${config.API_ENDPOINT}/lists/${listId}`, {\n      headers: {\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  getListIdeas(listId) {\n    return fetch(`${config.API_ENDPOINT}/lists/${listId}/ideas`, {\n      headers: {\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postList(name) {\n      return fetch(`${config.API_ENDPOINT}/lists`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'authorization': `bearer ${TokenService.getAuthToken()}`\n        },\n        body: JSON.stringify({\n            name\n        }),\n      })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n            )\n  },\n  postIdea(listId, name, content) {\n    return fetch(`${config.API_ENDPOINT}/ideas`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify({\n        list_id: listId,\n        name,\n        content\n      }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  \n  deleteIdea(ideaId) {\n      return fetch(`${config.API_ENDPOINT}/ideas/${ideaId}`, {\n          method: 'DELETE',\n          headers: {\n              'content-type': 'application/json',\n              'authorization': `bearer ${TokenService.getAuthToken()}`,\n          },\n      })\n        .then(res => \n            (!res.ok)\n             ? res.json().then(e => Promise.reject(e))\n             : console.log(\"delete from api service \", ideaId))\n  },\n\n\n  deleteList(listId) {\n      return fetch(`${config.API_ENDPOINT}/lists/${listId}`, {\n          method: 'DELETE',\n          headers: {\n              'content-type': 'application/json',\n              'authorization': `bearer ${TokenService.getAuthToken()}`,\n          }\n      })\n        .catch(error => (console.log(error)))\n  },\n}\n\nexport default IdeasApiService","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport IdeasApiService from '../../services/ideas-api-service'\nimport './IdeaListItem.css'\n\n//this component renders each clickable list name\n\nexport default class IdeaListItem extends Component {\n  static defaultProps = {\n    onDeleteSuccess: () => {}\n  }\n  \n  //function for deletion \n  handleClickDelete = e => {\n    e.preventDefault()\n    const listId = this.props.id\n    if(window.confirm(\"WARNING: Deleting is irreversible and will delete all ideas in this list. Are you sure you want to delete?\")) {\n    IdeasApiService.deleteList(listId)\n     .then(() => this.props.onDeleteSuccess())\n     .catch(error=>console.error({error}))\n  }}\n\n  render() {\n    const { list } = this.props\n    return (\n    <div className='IdeaListItem__main'>\n      <Link to={`/lists/${list.id}`} className='IdeaListItem'>\n        <header className='IdeaListItem__header'>\n          <h2 className='IdeaListItem__heading'>\n            {list.name}\n          </h2>\n        </header>\n        <footer className='IdeaListItem__footer'>\n          <ListIdeaCount list={list} />\n        </footer>\n      </Link>\n      <button type='button' className='delete_list_button' onClick={this.handleClickDelete}>\n          Delete\n      </button>\n    </div>\n    )\n  }\n}\n\n//function to display number of ideas in each list\n\nfunction ListIdeaCount({ list }) {\n  let text = \"ideas\";\n\n  if(list.number_of_ideas < 2) {\n    text = \"idea\"\n  }\n  return (\n    <span\n      className='IdeaListItem__idea-count'\n    >\n        {list.number_of_ideas} {text}\n    </span>\n  )\n}","import React, { Component } from 'react'\nimport ListContext from '../../contexts/ListContext'\nimport IdeasApiService from '../../services/ideas-api-service'\nimport { Section } from '../../components/Utils/Utils'\nimport IdeaListItem from '../../components/IdeaListItem/IdeaListItem'\nimport { Link } from 'react-router-dom'\nimport './ListsPage.css'\n\nexport default class ListsPage extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {},\n    },\n  }\n  static contextType = ListContext\n\n  componentDidMount() {\n    IdeasApiService.getLists()\n      .then(this.context.setLists)\n      .then(this.context.clearError)\n      .catch(this.context.setError)\n  }\n\n  componentWillUnmount() {\n    this.context.clearLists()\n  }\n\n  handleDeleteSuccess = list => {\n    const { history } = this.props\n    history.push(`/`)\n    this.context.deleteList(list)\n  }\n\n  renderLists() {\n    const { lists = [] } = this.context\n    return lists.map(list =>\n      <IdeaListItem \n        id={list.id}\n        key={list.id}\n        list={list}\n        onDeleteSuccess={()=>this.handleDeleteSuccess(list.id)}\n      />\n    )\n  }\n\n  render() {\n    const { error } = this.context\n    return (\n      <Section list className='ListsPage'>\n        <div className='newlist_idea'>\n         <Link to=\"/newidea\">\n            <div className=\"newidea\">\n                New Idea\n            </div>\n        </Link>          \n         <Link to=\"/newlist\">\n            <div className=\"newList\">\n                New List\n            </div>\n        </Link>\n        </div>\n        {error\n          ? <p className='red'>There was an error, try again</p>\n          : this.renderLists()}\n      </Section>\n    )\n  }\n}","import React, { Component } from 'react'\nimport TokenService from '../../services/token-service'\nimport { Section } from '../../components/Utils/Utils'\nimport Home from '../../components/Home/Home'\nimport ListsPage from '../ListsPage/ListsPage'\n\nexport default class HomePage extends Component {\n  render() {\n    return (\n    <Section className = \"homepage\">\n        {TokenService.hasAuthToken()\n          ? <ListsPage />\n          : <Home /> }\n    </Section>\n    )\n  }\n}","import React from \"react\";\n\nfunction Chevron(props) {\n  return (\n    <svg\n      className={props.className}\n      height={props.height}\n      width={props.width}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 320 512\"\n    >\n      <path\n        fill={props.fill}\n        d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\n      />\n    </svg>\n  );\n}\n\nexport default Chevron;\n","import React, { useState, useRef } from \"react\";\nimport Chevron from \"./Chevron\";\n\nimport \"./Accordion.css\";\nimport IdeasApiService from \"../../services/ideas-api-service\";\n\n/* this is an 'accordion' component that I used to house each of the user's\n idea. c/o with some personalised modifications:\n https://medium.com/skillthrive/build-a-react-accordion-component-from-scratch-using-react-hooks-a71d3d91324b */\n\nfunction Accordion(props) {\n  const [setActive, setActiveState] = useState(\"\");\n  const [setHeight, setHeightState] = useState(\"0px\");\n  const [setRotate, setRotateState] = useState(\"accordion__icon\");\n\n  const content = useRef(null);\n\n  function toggleAccordion() {\n    setActiveState(setActive === \"\" ? \"active\" : \"\");\n    setHeightState(\n      setActive === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`\n    );\n    setRotateState(\n      setActive === \"active\" ? \"accordion__icon\" : \"accordion__icon rotate\"\n    );\n  }\n\n  const handleClickDelete = e => {\n    e.preventDefault()\n    const ideaId = props.id\n    IdeasApiService.deleteIdea(ideaId)\n     .then(() => props.onDeleteSuccess())\n     .catch(error=>console.error({error}))\n  }\n\n  return (\n    <div className=\"accordion__section\">\n      <div className={`accordion ${setActive}`} onClick={toggleAccordion}>\n        <p className=\"accordion__title\">{props.title}</p>\n        <Chevron className={`${setRotate}`} width={10} fill={\"#EFEBE9\"} />\n      </div>\n      <div\n        ref={content}\n        style={{ maxHeight: `${setHeight}` }}\n        className=\"accordion__content\"\n      >\n        <div\n          className=\"accordion__text\"\n          dangerouslySetInnerHTML={{ __html: props.content }}\n        />\n        <button type='button' className='delete_idea' onClick={handleClickDelete}>\n            Delete Idea {/* added this button for idea deletion function */}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Accordion;\n","import React, { Component } from 'react'\nimport IdeasContext from '../../contexts/IdeasContext'\nimport IdeasApiService from '../../services/ideas-api-service'\nimport { Section } from '../../components/Utils/Utils'\nimport Accordion from '../../components/Accordion/Accordion'\nimport { Link } from 'react-router-dom'\nimport './IdeasPage.css'\n\nexport default class IdeasPage extends Component {\n  static defaultProps = {\n    match: { params: {} },\n    history: {\n        push: () => {},\n      },\n  }\n\n  static contextType = IdeasContext\n\n  componentDidMount() {\n//retrieve data from the server upon the component's mounting\n    const { listId } = this.props.match.params\n    IdeasApiService.getList(listId)\n      .then(this.context.setList)\n      .then(this.context.clearError)\n      .catch(this.context.setError)\n    IdeasApiService.getListIdeas(listId)\n      .then(this.context.setIdeas)\n      .then(this.context.clearError)\n      .catch(this.context.setError)\n  }\n\n  componentWillUnmount() {\n//clears the context out when done\n    this.context.clearList()\n  }\n\n  handleDeleteSuccess = idea => {\n    const { history } = this.props\n    history.push(`/lists/${this.context.list.id}`)\n    this.context.deleteIdea(idea)\n  }\n\n  renderList() {\n    const { list, ideas } = this.context\n    return <>\n      <h2 className='list_name'>{list.name}</h2>\n      <Ideas ideas={ideas} deleteFunction={this.handleDeleteSuccess} />\n    </>\n  }\n\n  render() {\n    const { error, list={} } = this.context\n    let content\n    if (error) {\n//adds a layer for error handling\n      content = (error.error === `List doesn't exist`)\n        ? <p className='red'>List not found</p>\n        : <p className='red'>There was an error</p>\n    } else if (!list.id) {\n      content = <div className='loading' />\n    } else {\n      content = this.renderList()\n    }\n    return (\n      <Section className='IdeasPage'>\n        {content}\n      </Section>\n    )\n  }\n}\n\nfunction Ideas({ ideas = [], deleteFunction }) {\n// adds a message with a link to the home page when a list is empty\n    if (ideas.length === 0) {\n        return (\n            <div className='empty_list'>\n            <p>This list is empty!</p>\n            <Link to='/'>Go back to home page</Link>\n            </div>\n        )\n    }\n  return (\n      ideas.map(idea =>\n          <Accordion\n           onDeleteSuccess={() => deleteFunction(idea.id)}\n           key={idea.id}\n           id={idea.id}\n           title={idea.name}\n           content={idea.content} />\n      )\n  )\n}\n","import React, { Component } from 'react'\nimport IdeasContext from '../../contexts/IdeasContext'\nimport IdeasApiService from '../../services/ideas-api-service'\nimport { Input, Button, Textarea, Required } from '../Utils/Utils'\nimport { Link } from 'react-router-dom'\nimport './NewIdeaForm.css'\n\nexport default class NewIdeaForm extends Component {  \n  static defaultProps = {\n      onPostIdeaSuccess: () => {}\n  }\n  static contextType = IdeasContext\n  listSelection = []\n  missingList = false\n\n  componentDidMount() {\n    IdeasApiService.getLists()\n      .then(this.context.setLists)\n      .then(this.context.clearError)\n      .catch(this.context.setError)\n  }\n\n  handleSubmit = ev => {\n    ev.preventDefault()\n    const { list } = ev.target\n    const { name } = ev.target\n    const { content } = ev.target\n\n    IdeasApiService.postIdea(list.value, name.value, content.value)\n      .then(() => {\n        list.value = ''\n        name.value = ''\n        content.value = ''\n        this.props.onPostIdeaSuccess()\n      })\n      .catch(this.context.setError)\n      .catch(this.missingList = true)\n  }\n\n  renderListError() {\n    console.log(this.missingList)\n    if(this.missingList === true) {\n      return (\n        <p className=\"red\">Please select a list! If you don't have a list, <Link to='/newlist'>click here</Link> to make one.</p>\n      )\n    }\n  }\n\n  render() {\n    const { lists=[] } = this.context\n    return (\n    <div className='insertIdea'>\n    <h3>You're entering a new idea</h3>\n      <form\n        className='ideaForm'\n        onSubmit={this.handleSubmit}\n      >\n        <div className='ideaName'>\n            <label htmlFor='name'>New idea's name:</label>\n            <Required />\n            <Input\n                required\n                type='text'\n                maxLength='30'\n                name='name'\n                id='name'\n                />\n        </div>\n        <div className='content'>\n          <Required />\n          <Textarea\n            required\n            aria-label='Type a short description...'\n            name='content'\n            id='content'\n            cols='30'\n            rows='3'\n            maxLength='240'\n            placeholder='Type a short description...'>\n          </Textarea>\n        </div>\n        <label htmlFor='list'>Add to which list?</label>\n        <Required />\n        <select id='list' name='list' required>\n            <option value={null}>...</option>\n            {lists.map(list => {\n                return (\n                <option key={list.id} value={list.id}>\n                    {list.name}\n                </option>\n                )\n            })}\n        </select>\n        <Button type='submit'>\n          Add Idea\n        </Button>\n        {this.renderListError()}\n      </form>\n    </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NewIdeaForm from '../../components/NewIdeaForm/NewIdeaForm'\nimport { Section } from '../../components/Utils/Utils'\n\nexport default class NewIdeaPage extends Component {\n    static defaultProps = {\n        history: {\n            push: () => {}\n        },\n    }\n\n    handlePostIdeaSuccess = idea => {\n        const { history } = this.props\n        history.push('/')\n    }\n\n    render() {\n        return (\n            <Section className = 'NewIdeaPage'>\n                <NewIdeaForm\n                 onPostIdeaSuccess={this.handlePostIdeaSuccess}\n                />\n            </Section>\n        )\n    }\n}","import React, { Component } from 'react'\nimport ListContext from '../../contexts/ListContext'\nimport IdeasApiService from '../../services/ideas-api-service'\nimport { Input, Button, Required } from '../Utils/Utils'\nimport './NewListForm.css'\n\nexport default class NewListForm extends Component {\n  static defaultProps = {\n    onPostListSuccess: () => {}\n}\n  static contextType = ListContext \n  \n  handleSubmitList = ev => {\n    ev.preventDefault()\n    const { name } = ev.target\n\n    IdeasApiService.postList(name.value)\n      .then(this.context.addList)\n      .then(() => {\n        name.value = ''\n        this.props.onPostListSuccess()\n      })\n      .catch(this.context.setError)\n  }\n\n  render() {\n    return (\n    <div className='insertList'>\n    <h3>You're entering a new list for your ideas</h3>\n      <form\n        className='listForm'\n        onSubmit={this.handleSubmitList}\n      >\n        <div className='listName'>\n            <label htmlFor='name'>New list's name:</label>\n            <Required />\n            <Input\n                required\n                type='text'\n                maxLength='30'\n                name='name'\n                id='name'\n                />\n        </div>\n        <Button type='submit'>\n          Add List\n        </Button>\n      </form>\n    </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NewListForm from '../../components/NewListForm/NewListForm'\nimport { Section } from '../../components/Utils/Utils'\n\nexport default class NewListPage extends Component {\n    static defaultProps = {\n        history: {\n            push: () => {}\n        },\n    }\n\n    handlePostListSuccess = list => {\n        const { history } = this.props\n        history.push('/')\n    }\n\n    render() {\n        return (\n            <Section className = 'newListPage'>\n                <NewListForm\n                 onPostListSuccess={this.handlePostListSuccess}\n                />\n            </Section>\n        )\n    }\n}","import React from 'react';\nimport './ErrorComponent.css'\n\nexport default class ErrorComponent extends React.Component {\nstate = {\n    hasError: false\n}\n\ncomponentDidCatch(error, errorInfo) {\n    console.log('caught an error', error, errorInfo);\n\n    this.setState({hasError: true})\n}\n\n\nrender() {\n    if (this.state.hasError) {\n        return (\n            <div className = \"page_error\">\n                <h3>Oh no! Looks like something went wrong.</h3>\n                <p>We apologise for any inconvenience.</p>\n            </div>\n        )\n    }\n    return this.props.children\n}\n\n}","import React from 'react'\nimport './AboutHelp.css'\n// simple text page for About info\nexport default function About() {\n    return (\n        <div className=\"about_page\">\n            <h1>About this App</h1>\n            <p>This app in progress was developed specifically for those of us who have \n                very active brains due to ADHD. Forget the pen and paper, your unorganisable notes app in your\n                phone, or your calendar. This app enables you to store \"ideas\" in different \"lists\" that you've \n                randomly thought of and will surely forget in 5 minutes. It's not a calendar so it does not have\n                any time pressure, so feel free to go back to your lists whenever it's convenient for you, instead\n                of rushing through a deadline and ultimately getting behind on your own schedule.\n                <br /><br />\n                This app is flexible, in a way that you can list literally anything. Random kitchen ideas you saw at IKEA?\n                A restaurant your friend told you about? A funny joke you thought of on the bus? Anything. And we will expand\n                functionality based on user feedback as we go along.\n                <br /><br />\n                My goal is to make our lives living with ADHD a tad bit easier, with our active brains\n                and short term memories taken into consideration. I strive to be more helpful as I expand this app\n                and onto other projects.\n            </p>\n            <h1>About the developer</h1>\n            <p>My name is Liron and I am an Israeli-American developer based both in Southern California and in Tel Aviv. \n                I struggled my entire life with ADHD. My brain likes wandering around and it's very difficult to keep\n                up with it. It has also affected my short-term memory and my ability to keep up with tasks and routines.\n                I thought of this app during one of those instances, when I was shopping at Costco and saw something that\n                I told myself that I should save for. When I got home, that 'something' has been forgotten and I still can't\n                recall what it was. It is what it is, I guess.\n            </p>\n            <h1>Demo account</h1>\n            Try this app out by using the following credentials: \n\n            username: TestUser\n            password: TestPassword1!\n\n            This user has preset lists and ideas for demo. Feel free to add your own.\n        </div>\n    )\n}","import React from \"react\";\nimport { Textarea, Input, Required, Button} from \"../Utils/Utils\";\n//form submission to my email address\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <form\n        onSubmit={this.submitForm}\n        action=\"https://formspree.io/f/mzbkwaao\"\n        method=\"POST\"\n      >\n        <label>Email:</label>\n        <Required />\n        <Input type='email' name='email' required />\n        <label>Message:</label>\n        <Required />\n        <Textarea\n         required\n         name='message'\n         id='message'\n         cols='30'\n         rows='5'\n          />\n        {status === \"SUCCESS\" ? <p>Thanks!</p> : <Button type='submit'>Submit</Button>}\n        {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n      </form>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}","import React from 'react'\nimport MyForm from './MyForm'\nimport './AboutHelp.css'\n//simple text page for help file\nexport default function Help() {\n    return (\n        <div className=\"help_page\">\n            <h1>Questions? Suggestions?</h1>\n            <h3>Report a problem, ask a question, or suggest how we can improve</h3>\n            <MyForm />\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport NavBar from '../NavBar/NavBar'\nimport PrivateRoute from '../Utils/PrivateRoute'\nimport PublicOnlyRoute from '../Utils/PublicOnlyRoute'\nimport LoginPage from '../../routes/LoginPage/LoginPage'\nimport JoinPage from '../../routes/JoinPage/JoinPage'\nimport NotFoundPage from '../../routes/NotFoundPage/NotFoundPage'\nimport HomePage from '../../routes/HomePage/HomePage'\nimport IdeasPage from '../../routes/IdeasPage/IdeasPage'\nimport './App.css'\nimport NewIdeaPage from '../../routes/NewIdeaPage/NewIdeaPage'\nimport NewListPage from '../../routes/NewListPage/NewListPage'\nimport ErrorComponent from '../ErrorComponent/ErrorComponent'\nimport About from '../AboutHelp/About'\nimport Help from '../AboutHelp/Help'\n\nclass App extends Component {\n\n  state = { hasError: false }\n\n  static getDerivedStateFromError(error) {\n    console.error(error)\n    return { hasError: true }\n  } \n\n\n\n  render() {\n    return (\n      <ErrorComponent>\n      <div className='App'>\n        <header className='App__header'>\n            <NavBar />\n        </header>\n        <main className='App__main'>\n          {this.state.hasError && <p className='red'>There was an error! Oh no!</p>}\n          <Switch>\n            <Route\n              exact\n              path={'/'}\n              component={HomePage}\n            />\n            <Route\n              path={'/about'}\n              component={About}\n              />\n            <Route\n              path={'/help'}\n              component={Help}\n              />\n            <PublicOnlyRoute\n              path={'/login'}\n              component = {LoginPage}\n            />\n            <PublicOnlyRoute\n              path={'/join'}\n              component={JoinPage}\n            />\n            <PrivateRoute \n               path={'/lists/:listId'}\n               component={IdeasPage}\n               />\n            <PrivateRoute\n                path={'/newidea'}\n                component={NewIdeaPage}\n                />\n            <PrivateRoute\n                path={'/newlist'}\n                component={NewListPage}\n                />\n            <Route\n              component={NotFoundPage}\n            />\n          </Switch>\n        </main>\n      </div>\n      </ErrorComponent>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { IdeaProvider } from './contexts/IdeasContext'\nimport { ListProvider } from './contexts/ListContext'\nimport * as serviceWorker from './serviceWorker'\nimport App from './components/App/App'\nimport './index.css'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <ListProvider>\n      <IdeaProvider>\n        <App />\n      </IdeaProvider>\n    </ListProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()"],"sourceRoot":""}